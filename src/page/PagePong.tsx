import Giscus from '@giscus/react';
import './Page.css';

export function PagePong() {

  return (
    <main id="L_DRAFT" className="content"><div className="max-w-3xl"><p><em>Updated 19-Mar-2025.</em></p>
      <h1 id="pong">Pong</h1>
      <p>Different from Godot's <a href="https://github.com/godotengine/godot-demo-projects/tree/master/2d/pong">Pong example</a>, this tutorial use its physics engine. You will see the three <code className="inline-code">PhysicsBody2D</code> in action, and how <code className="inline-code">collision_layer</code> plus <code className="inline-code">collision_mask</code> work.</p>
      <p><a href="https://github.com/hungptsg/mini-projects/tree/main/pong/src">Full source of this project</a>.</p>
      <h2 id="create-the-project-and-entry-point">Create the project and entry-point</h2>
      <p>Open the engine, click the <strong>Create</strong> button, enter the name you want for your project. At <strong>Renderer</strong>, pick your rendering infratructure. The options are explained in the editor. <strong>Version Control Metadata</strong> give you a <code className="inline-code">.git</code> folder, aka. initialize a VCS for you.</p>
      <p>Hit <strong>Create &amp; Edit</strong> once you're done.</p>
      <h3 id="create-an-entry-point">Create an entry-point</h3>
      <p>Scenes are a Godot game main components. An entry-point of a Godot game is also a "scene" file, where everything start.</p>
      <p>Right-click on an empty part of the <strong>File System</strong> tab, pick <strong>New Scene...</strong>, name it <code className="inline-code">Main1</code> (or any name you want). Double-click the new scene. The <strong>Scene</strong> tab will display your <code className="inline-code">Main1</code> scene. Right-click the new scene and pick <strong>Set as Main Scene</strong>. Notice the scene has changed color to blue. Your scene also has a <code className="inline-code">Main1</code> node.</p>
      <p>This will be ours entry-point to start programing.</p>
      <h2 id="add-top-and-bottom-walls">Add top and bottom walls</h2>
      <p>Traditionally, a pong game will have a top and bottom walls to bounce the ball back to the playing field. Since we are using the engine's physics, add a <code className="inline-code">StaticBody2D</code> named <code className="inline-code">Walls</code> with two top and bottom <code className="inline-code">CollisionShape2D</code>s. Use <code className="inline-code">RectangleShape2D</code> for both <code className="inline-code">CollisionShape2D</code> <code className="inline-code">shape</code> on the <strong>Inspector</strong> tab. Resize the <code className="inline-code">RectangleShape2D</code>s to fit off-sceeen (the blue lines represent what the players can see).</p>
      <blockquote className="mt-4 py-2 px-4   border-l-4 border-color-border   text-sm [&amp;>p:first-child]:mt-0">
        <p><code className="inline-code">StaticBody2D</code> are physics objects that do not move at all, like walls and floors, but other physics objects can "interact" with. The two <code className="inline-code">CollisionShape2D</code> of this <code className="inline-code">Walls</code> contain data on where the <code className="inline-code">StaticBody2D</code> can be collided with.</p>
      </blockquote>
      <p><img alt="pong_1" src="./image/pong_1.png" /></p>
      <h2 id="add-paddles">Add paddles</h2>
      <p>Add a paddle that two players can control.</p>
      <p>At <strong>Project</strong> &gt; <strong>Project Settings...</strong> &gt; <strong>Input Map</strong> tab, add some "input action" for the players to move. Wire them to the desired physical keys on you keyboard.</p>
      <p><img alt="pong_2" src="./image/pong_2.png" /></p>
      <p>From the <code className="inline-code">Main1</code> node, add two <code className="inline-code">CharacterBody2D</code> with perspective <code className="inline-code">Polygon2D</code> for sprite and a <code className="inline-code">CollisionShape2D</code> for collision. Rename to <code className="inline-code">Paddle_P1</code> and <code className="inline-code">Paddle_P2</code>.</p>
      <p>While selecting <code className="inline-code">Polygon2D</code>, click four points on the editor to make a rectangle. Change the <code className="inline-code">color</code> to your liking.</p>
      <p>Use <code className="inline-code">RectangleShape2D</code> for both <code className="inline-code">CollisionShape2D</code> <code className="inline-code">shape</code> on the <strong>Inspector</strong> tab. Resize the <code className="inline-code">Polygon2D</code>s and <code className="inline-code">RectangleShape2D</code>s to fit as paddles.</p>
      <blockquote className="mt-4 py-2 px-4   border-l-4 border-color-border   text-sm [&amp;>p:first-child]:mt-0">
        <p><code className="inline-code">CharacterBody2D</code> are physics objects with user input, intended for... characters. Heavily customized for platformer games, they move by setting the <code className="inline-code">velocity</code> and then call <code className="inline-code">move_and_slide</code>.</p>
      </blockquote>
      <p><img alt="pong_3" src="./image/pong_3.png" /></p>
      <p>Click both paddle and click <strong>Attach a new script to the selected node</strong> (document icon with plus sign) button on the <em>Scene</em> tab to attach scripts to both paddle.</p>
      <pre>
        <div className="rounded-md overflow-hidden   mt-4">
          <div className="flex items-center p-1   bg-color-code-header">
            <div className="flex-1">
              <button className="px-3   hover:bg-color-code-block  text-color-text-subtle">GdScript</button>
              <button className="px-3   hover:bg-color-code-block    text-color-secondary-base">C#</button>
              </div>
              <button className="px-3   hover:bg-color-code-block text-color-text-subtle">Copy</button>
              </div>
              <div>
                <pre className="prismjs code-block-gdscript">
                  <code className="language-gdscript" style="white-space: pre; color: rgb(248, 248, 242); background: none; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;">
                    <span className="token comment"># paddle_p1.gd</span><span className="">
      </span><span className=""></span><span className="token keyword">class_name</span><span className=""> </span><span className="token class-name">Paddle_P1</span><span className=""> </span><span className="token keyword">extends</span><span className=""> CharacterBody2D
        </span>
        <span className=""></span><span className="token keyword">func</span><span className=""> </span><span className="token function">_physics_process</span><span className="token punctuation">(</span><span className="">delta</span><span className="token punctuation">)</span><span className="token punctuation">:</span><span className=""> </span><span className="token comment"># called every 1/60 second</span><span className="">
        </span><span className="">	</span><span className="token keyword">var</span><span className=""> axis </span><span className="token operator">=</span><span className=""> Input</span><span className="token punctuation">.</span><span className="token function">get_axis</span><span className="token punctuation">(</span><span className="token string">"p2_up"</span><span className="token punctuation">,</span><span className=""> </span><span className="token string">"p2_down"</span><span className="token punctuation">)</span><span className="">
        </span><span className="">	velocity </span><span className="token operator">=</span><span className=""> </span><span className="token function">Vector2</span><span className="token punctuation">(</span><span className="token number">0</span><span className="token punctuation">,</span><span className=""> axis</span><span className="token punctuation">)</span><span className=""> </span><span className="token operator">*</span><span className=""> </span><span className="token number">1000</span><span className="">
        </span><span className="">	</span><span className="token function">move_and_slide</span><span className="token punctuation">(</span><span className="token punctuation">)</span><span className="">
        </span></code></pre></div><div><pre className="prismjs code-block-csharp"><code className="language-csharp" style="white-space: pre; color: rgb(248, 248, 242); background: none; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;"></code></pre></div></div></pre>
      <pre><div className="rounded-md overflow-hidden   mt-4"><div className="flex items-center p-1   bg-color-code-header"><div className="flex-1"><button className="px-3   hover:bg-color-code-block  text-color-text-subtle">GdScript</button><button className="px-3   hover:bg-color-code-block    text-color-secondary-base">C#</button></div><button className="px-3   hover:bg-color-code-block text-color-text-subtle">Copy</button></div><div><pre className="prismjs code-block-gdscript"><code className="language-gdscript" style="white-space: pre; color: rgb(248, 248, 242); background: none; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span className="token comment"># paddle_p2.gd</span><span className="">
      </span><span className=""></span><span className="token keyword">class_name</span><span className=""> </span><span className="token class-name">Paddle_P2</span><span className=""> </span><span className="token keyword">extends</span><span className=""> CharacterBody2D
        </span>
        <span className=""></span><span className="token keyword">func</span><span className=""> </span><span className="token function">_physics_process</span><span className="token punctuation">(</span><span className="">delta</span><span className="token punctuation">)</span><span className="token punctuation">:</span><span className=""> </span><span className="token comment"># called every 1/60 second</span><span className="">
        </span><span className="">	</span><span className="token keyword">var</span><span className=""> axis </span><span className="token operator">=</span><span className=""> Input</span><span className="token punctuation">.</span><span className="token function">get_axis</span><span className="token punctuation">(</span><span className="token string">"p1_up"</span><span className="token punctuation">,</span><span className=""> </span><span className="token string">"p1_down"</span><span className="token punctuation">)</span><span className="">
        </span><span className="">	velocity </span><span className="token operator">=</span><span className=""> </span><span className="token function">Vector2</span><span className="token punctuation">(</span><span className="token number">0</span><span className="token punctuation">,</span><span className=""> axis</span><span className="token punctuation">)</span><span className=""> </span><span className="token operator">*</span><span className=""> </span><span className="token number">1000</span><span className="">
        </span><span className="">	</span><span className="token function">move_and_slide</span><span className="token punctuation">(</span><span className="token punctuation">)</span><span className="">
        </span></code></pre></div><div><pre className="prismjs code-block-csharp"><code className="language-csharp" style="white-space: pre; color: rgb(248, 248, 242); background: none; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;"></code></pre></div></div></pre>
      <p><code className="inline-code">Input.get_axis</code> will return a float represent the player <code className="inline-code">up</code> and <code className="inline-code">down</code> input. If <code className="inline-code">up</code> is pressed, <code className="inline-code">axis</code> will return <code className="inline-code">-1</code>, while <code className="inline-code">down</code> will yield <code className="inline-code">1</code>. Pressing both result in a <code className="inline-code">0</code>. <code className="inline-code">axis</code> will then be used to calculate the paddle's velocity, as we put in a random speed of <code className="inline-code">1000</code>. Calling <code className="inline-code">move_and_slide</code> will take care of some complex movement of the paddle. Putting this movement logic in <code className="inline-code">_physics_process</code> will have it called every `logic` frame (default to 1/60 second).</p>
      <p>Press the <strong>Run Project</strong> button on the top-right. Now you have something like this.</p>
      <p><img alt="pong_4" src="./image/pong_4.gif"></p>
      <h2 id="add-the-ball">Add the ball</h2>
      <p>Add a <code className="inline-code">RigidBody2D</code> named <code className="inline-code">Ball</code> with a <code className="inline-code">Polygon2D</code> for sprite and a <code className="inline-code">CollisionShape2D</code>.</p>
      <p>While selecting <code className="inline-code">Polygon2D</code>, click enough points on the editor to make a circle. Change the <code className="inline-code">color</code> to your liking.</p>
      <p>Use <code className="inline-code">CircleShape2D</code> for the <code className="inline-code">CollisionShape2D</code> <code className="inline-code">shape</code> on the <strong>Inspector</strong> tab.</p>
      <blockquote className="mt-4 py-2 px-4   border-l-4 border-color-border   text-sm [&amp;>p:first-child]:mt-0">
        <p><code className="inline-code">RigidBody2D</code> are pure physics objects, intended to be move physics-ly with <code className="inline-code">apply_impulse</code>.</p>
      </blockquote>
      <p>Optionally, add an <code className="inline-code">AudioStreamPlayer2D</code> for when the ball collides. A simple <code className="inline-code">.wave</code> sfx can be made with <a href="https://sfbgames.itch.io/chiptone">ChipTone</a>.</p>
      <p><img alt="pong_5" src="./image/pong_5.png" /></p>
      <p>Attach a script to <code className="inline-code">Ball</code>.</p>
      <pre><div className="rounded-md overflow-hidden   mt-4"><div className="flex items-center p-1   bg-color-code-header"><div className="flex-1"><button className="px-3   hover:bg-color-code-block  text-color-text-subtle">GdScript</button><button className="px-3   hover:bg-color-code-block    text-color-secondary-base">C#</button></div><button className="px-3   hover:bg-color-code-block text-color-text-subtle">Copy</button></div><div><pre className="prismjs code-block-gdscript"><code className="language-gdscript" style="white-space: pre; color: rgb(248, 248, 242); background: none; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span className="token comment"># ball.gd</span><span className="">
      </span><span className=""></span><span className="token keyword">class_name</span><span className=""> </span><span className="token class-name">Ball</span><span className=""> </span><span className="token keyword">extends</span><span className=""> RigidBody2D
        </span>
        <span className=""></span><span className="token keyword">signal</span><span className=""> </span><span className="token function">scored</span><span className="token punctuation">(</span><span className="">player</span><span className="token punctuation">:</span><span className=""> </span><span className="token class-name">String</span><span className="token punctuation">)</span><span className="">
        </span><span className=""></span><span className="token keyword">var</span><span className=""> original_position </span><span className="token operator">=</span><span className=""> position
        </span><span className="">@</span><span className="token keyword">onready</span><span className=""> </span><span className="token keyword">var</span><span className=""> boundary_left </span><span className="token operator">=</span><span className=""> </span><span className="token function">get_viewport_rect</span><span className="token punctuation">(</span><span className="token punctuation">)</span><span className="token punctuation">.</span><span className="">position</span><span className="token punctuation">.</span><span className="">x
        </span><span className="">@</span><span className="token keyword">onready</span><span className=""> </span><span className="token keyword">var</span><span className=""> boundary_right </span><span className="token operator">=</span><span className=""> </span><span className="token function">get_viewport_rect</span><span className="token punctuation">(</span><span className="token punctuation">)</span><span className="token punctuation">.</span><span className="">size</span><span className="token punctuation">.</span><span className="">x
        </span>
        <span className=""></span><span className="token keyword">func</span><span className=""> </span><span className="token function">_integrate_forces</span><span className="token punctuation">(</span><span className="">state</span><span className="token punctuation">)</span><span className="token punctuation">:</span><span className="">
        </span><span className="">	</span><span className="token comment"># if ball is out of bound...</span><span className="">
        </span><span className="">	</span><span className="token keyword">if</span><span className=""> position</span><span className="token punctuation">.</span><span className="">x </span><span className="token operator">&lt;</span><span className=""> boundary_left </span><span className="token keyword">or</span><span className=""> position</span><span className="token punctuation">.</span><span className="">x </span><span className="token operator">&gt;</span><span className=""> boundary_right</span><span className="token punctuation">:</span><span className="">
        </span><span className="">		</span><span className="token comment"># repostion and relaunch.</span><span className="">
        </span><span className="">		</span><span className="token function">_reset_posision_and_speed</span><span className="token punctuation">(</span><span className="">state</span><span className="token punctuation">)</span><span className="">
        </span><span className="">		</span><span className="token function">launch_at_random_direction</span><span className="token punctuation">(</span><span className="token punctuation">)</span><span className="">
        </span><span className="">		</span><span className="token keyword">var</span><span className=""> scorer </span><span className="token operator">=</span><span className=""> </span><span className="token string">"p1"</span><span className=""> </span><span className="token keyword">if</span><span className=""> position</span><span className="token punctuation">.</span><span className="">x </span><span className="token operator">&gt;</span><span className=""> boundary_left </span><span className="token keyword">else</span><span className=""> </span><span className="token string">"p2"</span><span className="">
        </span><span className="">		scored</span><span className="token punctuation">.</span><span className="token function">emit</span><span className="token punctuation">(</span><span className="">scorer</span><span className="token punctuation">)</span><span className="">
        </span><span className="">	</span><span className="token comment"># if ball touch anything...</span><span className="">
        </span><span className="">	</span><span className="token keyword">for</span><span className=""> i </span><span className="token keyword">in</span><span className=""> </span><span className="token function">get_contact_count</span><span className="token punctuation">(</span><span className="token punctuation">)</span><span className="token punctuation">:</span><span className="">
        </span><span className="">		</span><span className="token variable">$AudioStreamPlayer2D</span><span className="token punctuation">.</span><span className="token function">play</span><span className="token punctuation">(</span><span className="token punctuation">)</span><span className=""> </span><span className="token comment"># play an impact sound.</span><span className="">
        </span><span className="">		</span><span className="token function">apply_impulse</span><span className="token punctuation">(</span><span className="">state</span><span className="token punctuation">.</span><span className="">linear_velocity </span><span className="token operator">*</span><span className=""> </span><span className="token number">0.15</span><span className="token punctuation">)</span><span className=""> </span><span className="token comment"># increase speed.</span><span className="">
        </span><span className="">		</span><span className="token comment"># allow the ball to be affected by the player movement,</span><span className="">
        </span><span className="">		</span><span className="token comment"># making it hard for the opponent to predict the trajectory.</span><span className="">
        </span><span className="">		</span><span className="token keyword">var</span><span className=""> collider_obj </span><span className="token operator">=</span><span className=""> state</span><span className="token punctuation">.</span><span className="token function">get_contact_collider_object</span><span className="token punctuation">(</span><span className="">i</span><span className="token punctuation">)</span><span className="">
        </span><span className="">		</span><span className="token keyword">if</span><span className=""> collider_obj </span><span className="token keyword">is</span><span className=""> Paddle_P1 </span><span className="token keyword">or</span><span className=""> collider_obj </span><span className="token keyword">is</span><span className=""> Paddle_P2</span><span className="token punctuation">:</span><span className="">
        </span><span className="">			</span><span className="token keyword">var</span><span className=""> velo </span><span className="token operator">=</span><span className=""> collider_obj</span><span className="token punctuation">.</span><span className="">velocity </span><span className="token operator">*</span><span className=""> </span><span className="token number">0.2</span><span className="">
        </span><span className="">			</span><span className="token function">apply_impulse</span><span className="token punctuation">(</span><span className="">velo</span><span className="token punctuation">)</span><span className="">
        </span>
        <span className=""></span><span className="token keyword">func</span><span className=""> </span><span className="token function">_reset_posision_and_speed</span><span className="token punctuation">(</span><span className="">state</span><span className="token punctuation">)</span><span className="token punctuation">:</span><span className="">
        </span><span className="">	state</span><span className="token punctuation">.</span><span className="">transform </span><span className="token operator">=</span><span className=""> </span><span className="token function">Transform2D</span><span className="token punctuation">(</span><span className="token number">0</span><span className="token punctuation">,</span><span className=""> original_position</span><span className="token punctuation">)</span><span className="">
        </span><span className="">	linear_velocity </span><span className="token operator">=</span><span className=""> Vector2</span><span className="token punctuation">.</span><span className="token constant">ZERO</span><span className="">
        </span>
        <span className=""></span><span className="token keyword">func</span><span className=""> </span><span className="token function">launch_at_random_direction</span><span className="token punctuation">(</span><span className="token punctuation">)</span><span className="token punctuation">:</span><span className="">
        </span><span className="">	</span><span className="token keyword">var</span><span className=""> dir </span><span className="token operator">=</span><span className=""> </span><span className="token function">Vector2</span><span className="token punctuation">(</span><span className="">
        </span><span className="">		</span><span className="token function">randi_range</span><span className="token punctuation">(</span><span className="token number">50</span><span className="token punctuation">,</span><span className=""> </span><span className="token number">10</span><span className="token punctuation">)</span><span className=""> </span><span className="token operator">*</span><span className=""> </span><span className="token punctuation">[</span><span className="token operator">-</span><span className="token number">1</span><span className="token punctuation">,</span><span className=""> </span><span className="token number">1</span><span className="token punctuation">]</span><span className="token punctuation">.</span><span className="token function">pick_random</span><span className="token punctuation">(</span><span className="token punctuation">)</span><span className="token punctuation">,</span><span className="">
        </span><span className="">		</span><span className="token function">randi_range</span><span className="token punctuation">(</span><span className="token number">50</span><span className="token punctuation">,</span><span className=""> </span><span className="token number">10</span><span className="token punctuation">)</span><span className=""> </span><span className="token operator">*</span><span className=""> </span><span className="token punctuation">[</span><span className="token operator">-</span><span className="token number">1</span><span className="token punctuation">,</span><span className=""> </span><span className="token number">1</span><span className="token punctuation">]</span><span className="token punctuation">.</span><span className="token function">pick_random</span><span className="token punctuation">(</span><span className="token punctuation">)</span><span className="token punctuation">)</span><span className="">
        </span><span className="">	</span><span className="token function">apply_impulse</span><span className="token punctuation">(</span><span className="token function">Vector2</span><span className="token punctuation">(</span><span className="">dir</span><span className="token punctuation">.</span><span className="token function">normalized</span><span className="token punctuation">(</span><span className="token punctuation">)</span><span className=""> </span><span className="token operator">*</span><span className=""> </span><span className="token number">300</span><span className="token punctuation">)</span><span className="token punctuation">)</span><span className="">
        </span></code></pre></div><div><pre className="prismjs code-block-csharp"><code className="language-csharp" style="white-space: pre; color: rgb(248, 248, 242); background: none; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;"></code></pre></div></div></pre>
      <h2 id="main-game-cycle">Main game cycle</h2>
      <p>Attach a script to <code className="inline-code">Main1</code>. Add then add two <code className="inline-code">Label</code> named <code className="inline-code">Score_P1</code> and <code className="inline-code">Score_P2</code> also, to show player scores. Style the <code className="inline-code">Label</code>s as needed.</p>
      <pre><div className="rounded-md overflow-hidden   mt-4"><div className="flex items-center p-1   bg-color-code-header"><div className="flex-1"><button className="px-3   hover:bg-color-code-block  text-color-text-subtle">GdScript</button><button className="px-3   hover:bg-color-code-block    text-color-secondary-base">C#</button></div><button className="px-3   hover:bg-color-code-block text-color-text-subtle">Copy</button></div><div><pre className="prismjs code-block-gdscript"><code className="language-gdscript" style="white-space: pre; color: rgb(248, 248, 242); background: none; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span className="token comment"># main_1.gd</span><span className="">
      </span><span className=""></span><span className="token keyword">extends</span><span className=""> </span><span className="token class-name">Node2D</span><span className="">
        </span>
        <span className=""></span><span className="token keyword">var</span><span className=""> score_p1 </span><span className="token operator">=</span><span className=""> </span><span className="token number">0</span><span className="token punctuation">:</span><span className="">
        </span><span className="">	</span><span className="token function">set</span><span className="token punctuation">(</span><span className="">value</span><span className="token punctuation">)</span><span className="token punctuation">:</span><span className="">
        </span><span className="">		score_p1 </span><span className="token operator">=</span><span className=""> value
        </span><span className="">		</span><span className="token variable">$Score_P1</span><span className="token punctuation">.</span><span className="">text </span><span className="token operator">=</span><span className=""> </span><span className="token function">str</span><span className="token punctuation">(</span><span className="">value</span><span className="token punctuation">)</span><span className="">
        </span>
        <span className=""></span><span className="token keyword">var</span><span className=""> score_p2 </span><span className="token operator">=</span><span className=""> </span><span className="token number">0</span><span className="token punctuation">:</span><span className="">
        </span><span className="">	</span><span className="token function">set</span><span className="token punctuation">(</span><span className="">value</span><span className="token punctuation">)</span><span className="token punctuation">:</span><span className="">
        </span><span className="">		score_p2 </span><span className="token operator">=</span><span className=""> value
        </span><span className="">		</span><span className="token variable">$Score_P2</span><span className="token punctuation">.</span><span className="">text </span><span className="token operator">=</span><span className=""> </span><span className="token function">str</span><span className="token punctuation">(</span><span className="">value</span><span className="token punctuation">)</span><span className="">
        </span>
        <span className=""></span><span className="token keyword">func</span><span className=""> </span><span className="token function">_unhandled_input</span><span className="token punctuation">(</span><span className="">event</span><span className="token punctuation">:</span><span className=""> </span><span className="token class-name">InputEvent</span><span className="token punctuation">)</span><span className=""> </span><span className="token operator">-&gt;</span><span className=""> </span><span className="token class-name">void</span><span className="token punctuation">:</span><span className="">
        </span><span className="">	</span><span className="token keyword">if</span><span className=""> event</span><span className="token punctuation">.</span><span className="token function">is_action_pressed</span><span className="token punctuation">(</span><span className="token string">"reset_game"</span><span className="token punctuation">)</span><span className="token punctuation">:</span><span className="">
        </span><span className="">		score_p1 </span><span className="token operator">=</span><span className=""> </span><span className="token number">0</span><span className="">
        </span><span className="">		score_p2 </span><span className="token operator">=</span><span className=""> </span><span className="token number">0</span><span className="">
        </span><span className="">		</span><span className="token function">get_tree</span><span className="token punctuation">(</span><span className="token punctuation">)</span><span className="token punctuation">.</span><span className="token function">reload_current_scene</span><span className="token punctuation">(</span><span className="token punctuation">)</span><span className="">
        </span>
        <span className=""></span><span className="token keyword">func</span><span className=""> </span><span className="token function">_ready</span><span className="token punctuation">(</span><span className="token punctuation">)</span><span className="token punctuation">:</span><span className="">
        </span><span className="">	</span><span className="token variable">$Ball</span><span className="token punctuation">.</span><span className="token function">launch_at_random_direction</span><span className="token punctuation">(</span><span className="token punctuation">)</span><span className="">
        </span><span className="">	</span><span className="token variable">$Ball</span><span className="token punctuation">.</span><span className="">scored</span><span className="token punctuation">.</span><span className="token function">connect</span><span className="token punctuation">(</span><span className="">_on_scored</span><span className="token punctuation">)</span><span className="">
        </span>
        <span className=""></span><span className="token keyword">func</span><span className=""> </span><span className="token function">_on_scored</span><span className="token punctuation">(</span><span className="">p</span><span className="token punctuation">:</span><span className=""> </span><span className="token class-name">String</span><span className="token punctuation">)</span><span className="token punctuation">:</span><span className="">
        </span><span className="">	</span><span className="token keyword">if</span><span className=""> p </span><span className="token operator">==</span><span className=""> </span><span className="token string">"p1"</span><span className="token punctuation">:</span><span className="">
        </span><span className="">		score_p1 </span><span className="token operator">+=</span><span className=""> </span><span className="token number">1</span><span className="">
        </span><span className="">	</span><span className="token keyword">if</span><span className=""> p </span><span className="token operator">==</span><span className=""> </span><span className="token string">"p2"</span><span className="token punctuation">:</span><span className="">
        </span><span className="">		score_p2 </span><span className="token operator">+=</span><span className=""> </span><span className="token number">1</span><span className="">
        </span></code></pre></div><div><pre className="prismjs code-block-csharp"><code className="language-csharp" style="white-space: pre; color: rgb(248, 248, 242); background: none; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;"></code></pre></div></div></pre>
      <h3 id="collision-layer-and-collision-mask">Collision layer and Collision mask</h3>
      <p>In our setup, by default, the paddles will participate in collision too, when the paddle's <code className="inline-code">move_and_slide</code> is called.</p>
      <p>This is not what we desired.</p>
      <p><img alt="pong_6" src="./image/pong_6.gif"></p>
      <p>All three types of <code className="inline-code">PhysicsBody2D</code> we used are <code className="inline-code">StaticBody2D</code>, <code className="inline-code">CharacterBody2D</code> and <code className="inline-code">RigidBody2D</code>. All of them has <code className="inline-code">collision_layer</code> and <code className="inline-code">collision_mask</code> property.</p>
      <p><code className="inline-code">collision_layer</code> (<code className="inline-code">layer</code>) is the layer where the body is at.</p>
      <p><code className="inline-code">collision_mask</code> (<code className="inline-code">mask</code>) is what the body will use to decide whether if it will ignore or collide when it touch other bodies.</p>
      <p>By default everything use layer 1.</p>
      <p>To stop the paddle from moving sideway, we untick <code className="inline-code">1</code> from the paddle's <code className="inline-code">mask</code>. The paddles will ignore collision effect from layer <code className="inline-code">1</code>, but since the paddle's <code className="inline-code">layer</code> is still <code className="inline-code">1</code>, other bodies with <em>mask</em> <code className="inline-code">1</code> will still "one-sided collide" with/into the paddle.</p>
      <blockquote className="mt-4 py-2 px-4   border-l-4 border-color-border   text-sm [&amp;>p:first-child]:mt-0">
        <p>This also means the ball's <code className="inline-code">layer</code> can be untick, as the paddle ignore to collide with it / does not scan it.</p>
      </blockquote>
      <h3 id="but-now-the-paddles-go-though-wall-">But now the paddles go though wall?</h3>
      <p>Since the paddles has to avoid <code className="inline-code">mask</code> <code className="inline-code">1</code>, have the walls and the paddles "collidable" by turning on the paddles <code className="inline-code">mask</code> <code className="inline-code">2</code> and the walls <code className="inline-code">layer</code> <code className="inline-code">2</code>.</p>
      <blockquote className="mt-4 py-2 px-4   border-l-4 border-color-border   text-sm [&amp;>p:first-child]:mt-0">
        <p><code className="inline-code">StaticBody2D</code>s do not move at all, so theirs <code className="inline-code">mask</code> may be irrelevant.</p>
      </blockquote>
      <h2 id="the-end">The end</h2>
      <p>Thanks for reading.</p></div></main>
  )
}